//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TM_CarWash.ServiceTester.CarWashWebService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TM_CarWash_WebServiceSoap", Namespace="http://microsoft.com/webservices/")]
    public partial class TM_CarWash_WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToCarWashBlackListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFromCarWashBlackListOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistsInCarWashBlackListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToCarWashFavoritiesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveFromCarWashFavoritiesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsExistsInCarWashFavoritiesListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserVoteForCarWashOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserForCarWashVoteExistsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TM_CarWash_WebService() {
            this.Url = global::TM_CarWash.ServiceTester.Properties.Settings.Default.TM_CarWash_ServiceTester_CarWashWebService_TM_CarWash_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event GetAllUsersCompletedEventHandler GetAllUsersCompleted;
        
        /// <remarks/>
        public event AddToCarWashBlackListCompletedEventHandler AddToCarWashBlackListCompleted;
        
        /// <remarks/>
        public event RemoveFromCarWashBlackListCompletedEventHandler RemoveFromCarWashBlackListCompleted;
        
        /// <remarks/>
        public event IsExistsInCarWashBlackListCompletedEventHandler IsExistsInCarWashBlackListCompleted;
        
        /// <remarks/>
        public event AddToCarWashFavoritiesListCompletedEventHandler AddToCarWashFavoritiesListCompleted;
        
        /// <remarks/>
        public event RemoveFromCarWashFavoritiesListCompletedEventHandler RemoveFromCarWashFavoritiesListCompleted;
        
        /// <remarks/>
        public event IsExistsInCarWashFavoritiesListCompletedEventHandler IsExistsInCarWashFavoritiesListCompleted;
        
        /// <remarks/>
        public event UserVoteForCarWashCompletedEventHandler UserVoteForCarWashCompleted;
        
        /// <remarks/>
        public event IsUserForCarWashVoteExistsCompletedEventHandler IsUserForCarWashVoteExistsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/AddUser", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddUser(string login, string password) {
            this.Invoke("AddUser", new object[] {
                        login,
                        password});
        }
        
        /// <remarks/>
        public void AddUserAsync(string login, string password) {
            this.AddUserAsync(login, password, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(string login, string password, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        login,
                        password}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/GetAllUsers", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetAllUsers() {
            this.Invoke("GetAllUsers", new object[0]);
        }
        
        /// <remarks/>
        public void GetAllUsersAsync() {
            this.GetAllUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetAllUsersAsync(object userState) {
            if ((this.GetAllUsersOperationCompleted == null)) {
                this.GetAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUsersOperationCompleted);
            }
            this.InvokeAsync("GetAllUsers", new object[0], this.GetAllUsersOperationCompleted, userState);
        }
        
        private void OnGetAllUsersOperationCompleted(object arg) {
            if ((this.GetAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUsersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/AddToCarWashBlackList", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddToCarWashBlackList(int userId, int carWashId) {
            this.Invoke("AddToCarWashBlackList", new object[] {
                        userId,
                        carWashId});
        }
        
        /// <remarks/>
        public void AddToCarWashBlackListAsync(int userId, int carWashId) {
            this.AddToCarWashBlackListAsync(userId, carWashId, null);
        }
        
        /// <remarks/>
        public void AddToCarWashBlackListAsync(int userId, int carWashId, object userState) {
            if ((this.AddToCarWashBlackListOperationCompleted == null)) {
                this.AddToCarWashBlackListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToCarWashBlackListOperationCompleted);
            }
            this.InvokeAsync("AddToCarWashBlackList", new object[] {
                        userId,
                        carWashId}, this.AddToCarWashBlackListOperationCompleted, userState);
        }
        
        private void OnAddToCarWashBlackListOperationCompleted(object arg) {
            if ((this.AddToCarWashBlackListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToCarWashBlackListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/RemoveFromCarWashBlackList", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveFromCarWashBlackList(int userId, int carWashId) {
            this.Invoke("RemoveFromCarWashBlackList", new object[] {
                        userId,
                        carWashId});
        }
        
        /// <remarks/>
        public void RemoveFromCarWashBlackListAsync(int userId, int carWashId) {
            this.RemoveFromCarWashBlackListAsync(userId, carWashId, null);
        }
        
        /// <remarks/>
        public void RemoveFromCarWashBlackListAsync(int userId, int carWashId, object userState) {
            if ((this.RemoveFromCarWashBlackListOperationCompleted == null)) {
                this.RemoveFromCarWashBlackListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFromCarWashBlackListOperationCompleted);
            }
            this.InvokeAsync("RemoveFromCarWashBlackList", new object[] {
                        userId,
                        carWashId}, this.RemoveFromCarWashBlackListOperationCompleted, userState);
        }
        
        private void OnRemoveFromCarWashBlackListOperationCompleted(object arg) {
            if ((this.RemoveFromCarWashBlackListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFromCarWashBlackListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/IsExistsInCarWashBlackList", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IsExistsInCarWashBlackList(int userId, int carWashId) {
            this.Invoke("IsExistsInCarWashBlackList", new object[] {
                        userId,
                        carWashId});
        }
        
        /// <remarks/>
        public void IsExistsInCarWashBlackListAsync(int userId, int carWashId) {
            this.IsExistsInCarWashBlackListAsync(userId, carWashId, null);
        }
        
        /// <remarks/>
        public void IsExistsInCarWashBlackListAsync(int userId, int carWashId, object userState) {
            if ((this.IsExistsInCarWashBlackListOperationCompleted == null)) {
                this.IsExistsInCarWashBlackListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistsInCarWashBlackListOperationCompleted);
            }
            this.InvokeAsync("IsExistsInCarWashBlackList", new object[] {
                        userId,
                        carWashId}, this.IsExistsInCarWashBlackListOperationCompleted, userState);
        }
        
        private void OnIsExistsInCarWashBlackListOperationCompleted(object arg) {
            if ((this.IsExistsInCarWashBlackListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistsInCarWashBlackListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/AddToCarWashFavoritiesList", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddToCarWashFavoritiesList(int userId, int carWashId) {
            this.Invoke("AddToCarWashFavoritiesList", new object[] {
                        userId,
                        carWashId});
        }
        
        /// <remarks/>
        public void AddToCarWashFavoritiesListAsync(int userId, int carWashId) {
            this.AddToCarWashFavoritiesListAsync(userId, carWashId, null);
        }
        
        /// <remarks/>
        public void AddToCarWashFavoritiesListAsync(int userId, int carWashId, object userState) {
            if ((this.AddToCarWashFavoritiesListOperationCompleted == null)) {
                this.AddToCarWashFavoritiesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToCarWashFavoritiesListOperationCompleted);
            }
            this.InvokeAsync("AddToCarWashFavoritiesList", new object[] {
                        userId,
                        carWashId}, this.AddToCarWashFavoritiesListOperationCompleted, userState);
        }
        
        private void OnAddToCarWashFavoritiesListOperationCompleted(object arg) {
            if ((this.AddToCarWashFavoritiesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToCarWashFavoritiesListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/RemoveFromCarWashFavoritiesList", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveFromCarWashFavoritiesList(int userId, int carWashId) {
            this.Invoke("RemoveFromCarWashFavoritiesList", new object[] {
                        userId,
                        carWashId});
        }
        
        /// <remarks/>
        public void RemoveFromCarWashFavoritiesListAsync(int userId, int carWashId) {
            this.RemoveFromCarWashFavoritiesListAsync(userId, carWashId, null);
        }
        
        /// <remarks/>
        public void RemoveFromCarWashFavoritiesListAsync(int userId, int carWashId, object userState) {
            if ((this.RemoveFromCarWashFavoritiesListOperationCompleted == null)) {
                this.RemoveFromCarWashFavoritiesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveFromCarWashFavoritiesListOperationCompleted);
            }
            this.InvokeAsync("RemoveFromCarWashFavoritiesList", new object[] {
                        userId,
                        carWashId}, this.RemoveFromCarWashFavoritiesListOperationCompleted, userState);
        }
        
        private void OnRemoveFromCarWashFavoritiesListOperationCompleted(object arg) {
            if ((this.RemoveFromCarWashFavoritiesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveFromCarWashFavoritiesListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/IsExistsInCarWashFavoritiesList", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IsExistsInCarWashFavoritiesList(int userId, int carWashId) {
            this.Invoke("IsExistsInCarWashFavoritiesList", new object[] {
                        userId,
                        carWashId});
        }
        
        /// <remarks/>
        public void IsExistsInCarWashFavoritiesListAsync(int userId, int carWashId) {
            this.IsExistsInCarWashFavoritiesListAsync(userId, carWashId, null);
        }
        
        /// <remarks/>
        public void IsExistsInCarWashFavoritiesListAsync(int userId, int carWashId, object userState) {
            if ((this.IsExistsInCarWashFavoritiesListOperationCompleted == null)) {
                this.IsExistsInCarWashFavoritiesListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsExistsInCarWashFavoritiesListOperationCompleted);
            }
            this.InvokeAsync("IsExistsInCarWashFavoritiesList", new object[] {
                        userId,
                        carWashId}, this.IsExistsInCarWashFavoritiesListOperationCompleted, userState);
        }
        
        private void OnIsExistsInCarWashFavoritiesListOperationCompleted(object arg) {
            if ((this.IsExistsInCarWashFavoritiesListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsExistsInCarWashFavoritiesListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/UserVoteForCarWash", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UserVoteForCarWash(int userId, int carWashId, short userRating) {
            this.Invoke("UserVoteForCarWash", new object[] {
                        userId,
                        carWashId,
                        userRating});
        }
        
        /// <remarks/>
        public void UserVoteForCarWashAsync(int userId, int carWashId, short userRating) {
            this.UserVoteForCarWashAsync(userId, carWashId, userRating, null);
        }
        
        /// <remarks/>
        public void UserVoteForCarWashAsync(int userId, int carWashId, short userRating, object userState) {
            if ((this.UserVoteForCarWashOperationCompleted == null)) {
                this.UserVoteForCarWashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserVoteForCarWashOperationCompleted);
            }
            this.InvokeAsync("UserVoteForCarWash", new object[] {
                        userId,
                        carWashId,
                        userRating}, this.UserVoteForCarWashOperationCompleted, userState);
        }
        
        private void OnUserVoteForCarWashOperationCompleted(object arg) {
            if ((this.UserVoteForCarWashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserVoteForCarWashCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/IsUserForCarWashVoteExists", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IsUserForCarWashVoteExists(int userId, int carWashId) {
            this.Invoke("IsUserForCarWashVoteExists", new object[] {
                        userId,
                        carWashId});
        }
        
        /// <remarks/>
        public void IsUserForCarWashVoteExistsAsync(int userId, int carWashId) {
            this.IsUserForCarWashVoteExistsAsync(userId, carWashId, null);
        }
        
        /// <remarks/>
        public void IsUserForCarWashVoteExistsAsync(int userId, int carWashId, object userState) {
            if ((this.IsUserForCarWashVoteExistsOperationCompleted == null)) {
                this.IsUserForCarWashVoteExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserForCarWashVoteExistsOperationCompleted);
            }
            this.InvokeAsync("IsUserForCarWashVoteExists", new object[] {
                        userId,
                        carWashId}, this.IsUserForCarWashVoteExistsOperationCompleted, userState);
        }
        
        private void OnIsUserForCarWashVoteExistsOperationCompleted(object arg) {
            if ((this.IsUserForCarWashVoteExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserForCarWashVoteExistsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAllUsersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddToCarWashBlackListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveFromCarWashBlackListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void IsExistsInCarWashBlackListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddToCarWashFavoritiesListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveFromCarWashFavoritiesListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void IsExistsInCarWashFavoritiesListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UserVoteForCarWashCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void IsUserForCarWashVoteExistsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591